---
import { getVideoDurationInSeconds } from 'get-video-duration';
import { stat } from 'node:fs/promises';
import path from 'node:path';

interface Props {
  height?: number;
  src: string;
  width?: number;
}

const { height = 480, src, width = 720 } = Astro.props;
const videoSrc = `/assets/img/${src}`;
const absolutePath = path.join(process.cwd(), 'public', 'assets', 'img', src);

// Get file metadata
const stats = await stat(absolutePath);
const durationInSeconds = await getVideoDurationInSeconds(absolutePath);

// Format duration to MM:SS or HH:MM:SS
const formatDuration = (seconds: number) => {
  const hours = Math.floor(seconds / 3600);
  const minutes = Math.floor((seconds % 3600) / 60);
  const remainingSeconds = Math.floor(seconds % 60);
  
  if (hours > 0) {
    return `${hours}:${minutes.toString().padStart(2, '0')}:${remainingSeconds.toString().padStart(2, '0')}`;
  }
  return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;
};

// Add the formatFileSize function
const formatFileSize = (bytes: number) => {
  const units = ['B', 'KB', 'MB', 'GB'];
  let size = bytes;
  let unitIndex = 0;
  while (size >= 1024 && unitIndex < units.length - 1) {
    size /= 1024;
    unitIndex++;
  }
  return `${size.toFixed(2)} ${units[unitIndex]}`;
};

---

<div class="video-container">
  <ul class="metadata-list">
    <li>Requested src: {src}</li>
    <li>File size: {formatFileSize(stats.size)}</li>
    <li>Duration: {formatDuration(durationInSeconds)}</li>
  </ul>
  
  <video 
    class="w-full max-w-[720px] mx-auto video-player" 
    controls 
    height={height}
    preload="none"
    width={width}>
    <source src={videoSrc} type="video/mp4">
    <p>Your browser doesn't support HTML5 video.</p>
  </video>
</div>

<style>
  .video-container {
    border: 1px solid #787878;
    border-radius: 0.5rem;
    padding: 1rem 2rem;
    margin: 3rem 0;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  }

  .metadata-list {
    margin-bottom: 1rem;
    color: #9aabc4;
  }

  .video-player {
    border: 2px solid #b2b8be;
    border-radius: 0.25rem;
  }
</style>